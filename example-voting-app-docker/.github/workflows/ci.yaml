################################################################################
#      Copyright (C) 2020        Sebastian Francisco Colomar Bauza             #
#      SPDX-License-Identifier:  GPL-2.0-only                                  #
################################################################################
name: CI                                                                       #
on:                                                                            #
  push:                                                                        #
    branches:                                                                  #
    - docker                                                                   #
jobs:                                                                          #
  kubernetes:                                                                  #
    env:                                                                       #
      mode: kubernetes                                                         #
    runs-on: ubuntu-18.04                                                      #
    steps:                                                                     #
    -                                                                          #
      name: checkout                                                           #
      uses: actions/checkout@v2                                                #
    -                                                                          #
      name: test                                                               #
      run: |                                                                   #
        set -x                                                                 ;
                                                                               #
        branch=$(basename $GITHUB_REF)                                         ;
        project=$(basename $GITHUB_REPOSITORY)                                 ;
                                                                               #
        echo $branch | grep ^v[0-9]                                            \
          && release=$( echo $branch | awk -F^v '{ print $2 }' )               \
          || release=latest                                                    ;
                                                                               #
        for app in                                                             \
          result vote worker                                                   ;
          do                                                                   \
            docker build -t $GITHUB_REPOSITORY:$release-testing-$app $app/     ;
          done                                                                 ;
                                                                               #
        version="1.18.10-00"                                                   ;
        curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg          \
        |                                                                      \
        sudo apt-key add -                                                     ;
        echo deb http://apt.kubernetes.io/ kubernetes-xenial main              \
        |                                                                      \
        sudo tee -a /etc/apt/sources.list.d/kubernetes.list                    ;
        sudo apt-get update                                                    ;
        sudo apt-get install -y --allow-downgrades                             \
          kubelet=$version kubeadm=$version kubectl=$version                   ;
        ip=$( ip r | grep default | awk '{ print $9 }' )                       ;
        sudo swapoff -a                                                        ;
        sudo kubeadm init --apiserver-advertise-address $ip                    \
          --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all      ;
                                                                               #
        mkdir -p $HOME/.kube                                                   ;
        sudo cp /etc/kubernetes/admin.conf $HOME/.kube/config                  ;
        sudo chown $(id -u):$(id -g) $HOME/.kube/config                        ;
        echo "source <(kubectl completion bash)" >> ~/.bashrc                  ;
        kubectl apply -f                                                       \
          https://docs.projectcalico.org/v3.16/manifests/calico.yaml           ;
        master=$( kubectl get node | grep master | awk '{ print $1 }' )        ;
                                                                               #
        kubectl taint node $master node-role.kubernetes.io/master:NoSchedule-  ;
                                                                               #
        compose=etc/$mode/manifests/$project.yaml                              ;
        sed -i /image:.*$project/s/$release/$release-testing/ $compose         ;
        sed -i /imagePullPolicy/s/Always/Never/ $compose                       ;
        kubectl apply -f $compose                                              ;
                                                                               #
        for app in                                                             \
          postgres redis result vote worker                                    ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get deploy                                             \
                | grep "$app.*\([0-9]\)/\1" && break                           ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        for app in                                                             \
          result vote                                                          ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get svc | grep "$app.*ClusterIP.*8080/TCP" && break    ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        for app in                                                             \
          db                                                                   ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get svc | grep "$app.*ClusterIP.*5432/TCP" && break    ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        for app in redis                                                       ;
          do                                                                   \
            while true                                                         ;
              do                                                               \
                sleep 10                                                       ;
                kubectl get svc | grep "$app.*ClusterIP.*6379/TCP" && break    ;
              done                                                             ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl logs                                                       \
              deploy/postgres                                                  \
            | grep                                                             \
              "LOG:  database system is ready to accept connections"           \
            && break                                                           ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl logs                                                       \
              deploy/redis                                                     \
            | grep                                                             \
              "Ready to accept connections"                                    \
            && break                                                           ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl logs                                                       \
              deploy/result                                                    \
            | grep                                                             \
              "Connected to db"                                                \
            && break                                                           ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl logs                                                       \
              deploy/vote                                                      \
            | grep                                                             \
              "Listening at: http://0.0.0.0:8080"                              \
            && break                                                           ;
          done                                                                 ;
                                                                               #
        while true                                                             ;
          do                                                                   \
            sleep 10                                                           ;
            kubectl logs                                                       \
              deploy/worker                                                    \
            | grep                                                             \
              "Found redis at"                                                 \
            && break                                                           ;
          done                                                                 ;
################################################################################
